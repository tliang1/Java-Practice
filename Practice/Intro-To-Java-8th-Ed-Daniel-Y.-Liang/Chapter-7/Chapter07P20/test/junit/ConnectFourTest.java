package junit;

import static org.junit.Assert.*;

import org.junit.Test;

import main.ConnectFour;

/**
 * @author Tony Liang
 *
 */
public class ConnectFourTest
{
	int[][][] listsOfDisks =
		{
			new int[0][0],
			{
				{ 1, 2 },
				{ 2, 3 },
			},
			{
				{ 4, 5, 6 },
				{ 7, 8, 9 },
				{ 1, 2, 3 }
			},
			{
				{ 1, 1, 1, 1 },
				{ 1, 6, 1 },
				{ 1, 1 },
				{ 1 }
			},
			{
				{ 1, 2, 3, 4 },
				{ 5, 6, 7, 8 },
				{ 9, 4, 8, 2 },
				{ 7, 1, 9, 3 }
			},
			{
				{ 1, 2, 3, 4 },
				{ 2, 2, 2, 5 },
				{ 3, 5, 6, 7 },
				{ 6, 4, 4, 4 }
			},
			{
				{ 5, 6 },
				{ 3, 4 },
				{ 1, 2 },
				{ 7, 8 },
				{ 9, 1 }
			},
			{
				{ 1, 2, 3, 4, 5, 6 },
				{ 2, 3, 2, 5, 6, 2 }
			},
			{
				{ 1, 4, 5, 7, 9 },
				{ 5, 4, 2, 3, 6 },
				{ 3, 2, 1, 5, 5 },
				{ 2, 4, 8, 2, 0 },
				{ 9, 4, 3, 2, 3 },
				{ 1, 4, 1, 6, 8 },
				{ 0, 0, 9, 3, 2 }
			},
			{
				{ 3, 2, 1 },
				{ 4, 1, 6 },
				{ 1, 9, 8 },
				{ 6, 1, 4 }
			},
			{
				{ 1, 2, 7, 4 },
				{ 5, 7, 2, 8 }
			},
			{
				{ 3, 4, 5, 6, 7, 8, 9 },
				{ 9, 8, 7, 6, 5, 4, 3 },
				{ 3, 4, 5, 6, 7, 8, 9 },
				{ 9, 8, 7, 6, 5, 4, 3 },
				{ 3, 4, 5, 6, 7, 8, 9 },
				{ 9, 8, 7, 6, 5, 4, 3 }
			},
			{
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0 }
			},
			{
				{ 0, 5, 5, 5, 5, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0 }
			},
			{
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 7, 0, 0, 0 },
				{ 0, 0, 0, 7, 0, 0, 0 },
				{ 0, 0, 0, 7, 0, 0, 0 },
				{ 0, 0, 0, 7, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0 }
			},
			{
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 8, 0, 0, 0, 0, 0 },
				{ 0, 0, 8, 0, 0, 0, 0 },
				{ 0, 0, 0, 8, 0, 0, 0 },
				{ 0, 0, 0, 0, 8, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0 }
			},
			{
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 9, 0, 0, 0 },
				{ 0, 0, 9, 0, 0, 0, 0 },
				{ 0, 9, 0, 0, 0, 0, 0 },
				{ 9, 0, 0, 0, 0, 0, 0 }
			},
			{
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 1, 0, 0, 0 },
				{ 0, 0, 0, 2, 0, 0, 0 },
				{ 1, 1, 2, 2, 0, 0, 1 },
				{ 2, 1, 2, 2, 1, 2, 1 },
				{ 1, 2, 1, 1, 2, 1, 2 }
			},
			{
				{ 1, 2, 1, 2, 1, 2, 1 },
				{ 2, 1, 1, 2, 1, 1, 2 },
				{ 2, 2, 1, 1, 2, 2, 1 },
				{ 2, 1, 2, 2, 1, 2, 2 },
				{ 1, 1, 2, 1, 1, 2, 1 },
				{ 2, 1, 1, 2, 1, 1, 2 }
			},
			{
				{ 5, 5, 5, 5, 5, 5, 5 },
				{ 5, 1, 1, 1, 1, 5, 5 },
				{ 5, 5, 5, 5, 5, 5, 5 },
				{ 5, 5, 5, 5, 5, 5, 5 },
				{ 5, 5, 5, 5, 5, 5, 5 },
				{ 5, 5, 5, 5, 5, 5, 5 }
			},
			{
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 1, 0, 0, 0 },
				{ 0, 0, 1, 0, 0, 0, 0 },
				{ 0, 1, 0, 0, 0, 0, 0 },
				{ 1, 0, 0, 0, 0, 0, 0 }
			},
			{
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 1, 2, 0, 0, 0, 2, 1 },
				{ 2, 1, 1, 0, 2, 1, 1 },
				{ 1, 2, 1, 1, 2, 2, 2 },
				{ 1, 2, 1, 1, 1, 1, 1 }
			},
			{
				{ 2, 2, 1, 1, 1, 1, 1 },
				{ 1, 2, 1, 2, 2, 1, 1 },
				{ 1, 1, 2, 1, 2, 2, 2 }, 
				{ 1, 1, 1, 1, 1, 1, 1 },
				{ 2, 1, 2, 1, 2, 2, 2 },
				{ 1, 1, 2, 2, 1, 1, 1 }
			},
			{
				{ 5, 5, 5, 5, 5, 5, 5 },
				{ 5, 5, 5, 5, 5, 5, 5 },
				{ 5, 5, 2, 5, 5, 5, 5 },
				{ 5, 5, 2, 5, 5, 5, 5 },
				{ 5, 5, 2, 5, 5, 5, 5 },
				{ 5, 5, 2, 5, 5, 5, 5 }
			},
			{
				{ 0, 0, 2, 0, 0, 0, 0 },
				{ 0, 0, 0, 2, 0, 0, 0 },
				{ 0, 0, 0, 0, 2, 0, 0 },
				{ 0, 0, 0, 0, 0, 2, 0 },
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 0, 0, 0 }
			},
			{
				{ 0, 0, 0, 0, 0, 0, 0 },
				{ 0, 0, 0, 0, 2, 0, 0 },
				{ 1, 0, 0, 2, 1, 0, 1 },
				{ 2, 2, 1, 1, 1, 0, 1 },
				{ 2, 2, 2, 2, 2, 0, 2 },
				{ 2, 1, 2, 1, 1, 2, 2 }
			},
			{
				{ 1, 1, 2, 1, 1, 2, 1 },
				{ 1, 2, 2, 2, 2, 1, 1 },
				{ 2, 2, 2, 2, 2, 2, 1 },
				{ 2, 2, 2, 2, 1, 2, 2 },
				{ 2, 1, 2, 2, 1, 1, 2 },
				{ 1, 1, 2, 2, 1, 1, 1 }
			}
		};
	int[] winners = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2 };
	
	@Test
	public void testConsecutiveFourWinner()
	{
		for (int list = 0; list < listsOfDisks.length; list++)
		{
			assertEquals(winners[list],
					ConnectFour.connectFourWinner(listsOfDisks[list]));
		}
	}
}